{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAS9D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QACfC,IAAKL,EAAKK,IACVC,IAAI,eACJ,qBAAKC,QAbK,WACZJ,GACAF,EAAaD,GAEjBC,EAAaD,IAUNI,UAAU,OACVC,IAAI,gBACJC,IAAI,mBCfnB,IAAME,EAAa,CACjB,CAAE,IAAO,iBAAkBC,SAAS,GACpC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,eAAgBA,SAAS,GAClC,CAAE,IAAO,kBAAmBA,SAAS,IAgFxBC,MA7Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACxCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cACpCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAGLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WACRP,MACA,IAGFO,qBAAU,WACRR,GAAY,GACTJ,GAAaE,IACXF,EAAUX,MAAQa,EAAUb,KAC7BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAGA,EAAKK,MAAQW,EAAUX,IACjB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAa,QAGlC,CAACd,EAAWE,IAGd,IAAMY,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAW,KACjCZ,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,8CACA,wBAAQG,QAASc,EAAjB,4BAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQd,wCAAWb,SCjFjBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45dd8cf8.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n\r\n    const handleClick = () => {\r\n        if(!disabled) {\r\n            handleChoice(card)\r\n        }\r\n        handleChoice(card)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n              <img className=\"front\" \r\n              src={card.src} \r\n              alt=\"card front\" />\r\n              <img onClick={handleClick}\r\n               className=\"back\"\r\n               src=\"/img/back.png\" \r\n               alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { useEffect } from 'react/cjs/react.development';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { \"src\": \"/img/earth.png\", matched: false },\n  { \"src\": \"/img/mars.png\", matched: false },\n  { \"src\": \"/img/moon.png\", matched: false },\n  { \"src\": \"/img/neptune.png\", matched: false },\n  { \"src\": \"/img/sun.png\", matched: false },\n  { \"src\": \"/img/uranus.png\", matched: false }\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n//shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({ ...card, id: Math.random() }))\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n//start new game automatically\n  useEffect(() => {\n    shuffleCards()\n  },[])\n\n//compare selected cards\n  useEffect(() => {\n    setDisabled(true)\n    if(choiceOne && choiceTwo) {\n      if(choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000 )\n      }\n    }\n  },[choiceOne, choiceTwo])\n\n//reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns +1)\n    setDisabled(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Planet Match</h1>\n      <button onClick={shuffleCards}>Start New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n          key={card.id} \n          card={card}\n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}